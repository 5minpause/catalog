{"version":3,"file":"component---src-templates-tags-js-940d2c0da1a18dd003d9.js","mappings":"sIAoDA,UA9Ca,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IACR,EAA8BD,EAAKE,kBAA3BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAIf,OACE,2BACE,0BAAKI,GACL,0BACGF,EAAMG,KAAI,YAAe,IACxB,EADuB,EAAXC,KACiBC,YAArBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KACf,OACE,sBAAIC,IAAKD,GACP,gBAAC,EAAAE,KAAD,CAAMC,GAAIH,GAAOD,QAKzB,gBAAC,EAAAG,KAAD,CAAMC,GAAG,SAAT","sources":["webpack://catalog/./src/templates/tags.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Components\nimport { Link, graphql } from \"gatsby\";\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n  } tagged with \"${tag}\"`;\n\n  return (\n    <div>\n      <h1>{tagHeader}</h1>\n      <ul>\n        {edges.map(({ node }) => {\n          const { title, slug } = node.frontmatter;\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n      <Link to=\"/tags\">All tags</Link>\n    </div>\n  );\n};\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            slug\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","map","node","frontmatter","title","slug","key","Link","to"],"sourceRoot":""}