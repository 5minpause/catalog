{"version":3,"file":"component---src-pages-index-js-c31acf0af84d2962c6cb.js","mappings":"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","sources":["webpack://catalog/./src/components/seo.js","webpack://catalog/./src/components/search.js","webpack://catalog/./src/components/tagcloud.js","webpack://catalog/./src/pages/index.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Helmet } from \"react-helmet\";\nimport { useLocation } from \"@reach/router\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nconst Seo = ({ title, description, image, article, titleTemplate }) => {\n  const { pathname } = useLocation();\n  const { site } = useStaticQuery(query);\n\n  const {\n    defaultTitle,\n    defaultTitleTemplate,\n    defaultDescription,\n    siteUrl,\n    defaultImage,\n    twitterUsername,\n  } = site.siteMetadata;\n\n  const seo = {\n    title: title || defaultTitle,\n    titleTemplate: titleTemplate || defaultTitleTemplate,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image || defaultImage}`,\n    url: `${siteUrl}${pathname}`,\n  };\n\n  return (\n    <Helmet title={seo.title} titleTemplate={titleTemplate}>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n\n      {seo.url && <meta property=\"og:url\" content={seo.url} />}\n\n      {(article ? true : null) && <meta property=\"og:type\" content=\"article\" />}\n\n      {seo.title && <meta property=\"og:title\" content={seo.title} />}\n\n      {seo.description && (\n        <meta property=\"og:description\" content={seo.description} />\n      )}\n\n      {seo.image && <meta property=\"og:image\" content={seo.image} />}\n\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n\n      {twitterUsername && (\n        <meta name=\"twitter:creator\" content={twitterUsername} />\n      )}\n\n      {seo.title && <meta name=\"twitter:title\" content={seo.title} />}\n\n      {seo.description && (\n        <meta name=\"twitter:description\" content={seo.description} />\n      )}\n\n      {seo.image && <meta name=\"twitter:image\" content={seo.image} />}\n    </Helmet>\n  );\n};\n\nexport default Seo;\n\nSeo.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  image: PropTypes.string,\n  article: PropTypes.bool,\n};\n\nSeo.defaultProps = {\n  title: null,\n  description: null,\n  image: null,\n  article: false,\n};\n\nconst query = graphql`\n  query SEO {\n    site {\n      siteMetadata {\n        defaultTitle: title\n        defaultTitleTemplate: titleTemplate\n        defaultDescription: description\n        siteUrl: url\n        defaultImage: image\n        twitterUsername\n      }\n    }\n  }\n`;\n","import React from \"react\";\n\nconst Search = () => {\n  return (\n    <div>\n      <input type=\"text\" placeholder=\"inheritance\" />\n      <button type=\"submit\">Search</button>\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nimport { Link, useStaticQuery, graphql } from \"gatsby\";\nimport kebabCase from \"lodash/kebabCase\";\n\nconst componentStyles = {\n  padding: 12,\n};\nconst listStyles = {\n  marginBottom: 96,\n  paddingLeft: 0,\n};\nconst listItemStyles = {\n  listStyleType: \"none\",\n  backgroundColor: \"rgba(0, 0, 240, 0.3)\",\n  display: \"inline\",\n  margin: 12,\n  padding: 6,\n  borderRadius: 6,\n};\nconst linkStyle = {\n  textDecoration: \"none\",\n  color: \"#000\",\n};\nconst TagCloud = () => {\n  const { allMarkdownRemark } = useStaticQuery(query);\n  const { group } = allMarkdownRemark;\n\n  return (\n    <div style={componentStyles}>\n      <ul style={listStyles}>\n        {group.map((tag) => (\n          <li key={tag.fieldValue} style={listItemStyles}>\n            <Link to={`/tags/${kebabCase(tag.fieldValue)}/`} style={linkStyle}>\n              {tag.fieldValue} ({tag.totalCount})\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TagCloud;\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n","import * as React from \"react\"\nimport Seo from \"../components/seo\";\nimport Search from \"../components/search\";\nimport TagCloud from \"../components/tagcloud\";\n\n// styles\nconst pageStyles = {\n  color: \"#232129\",\n  padding: 96,\n  fontFamily: \"-apple-system, Roboto, sans-serif, serif\",\n};\nconst headingStyles = {\n  marginTop: 0,\n  marginBottom: 64,\n  maxWidth: 320,\n};\n\nconst IndexPage = () => {\n  return (\n    <div>\n      <Seo titleTemplate={\"%s\"} />\n      <main style={pageStyles}>\n        <h1 style={headingStyles}>Catalog</h1>\n        <Search />\n        <div>\n          <p>\n            If you are trying to read up what others have to say on topics like{\" \"}\n            <strong>Inheritance vs. Composition</strong>,{\" \"}\n            <strong>SOLID design principles</strong>,{\" \"}\n            <strong>software design patterns</strong>, or how to do{\" \"}\n            <strong>technical design documents</strong>, don't use a search\n            engine.\n          </p>\n          <p>\n            Search this <em>CATALOG</em> for your topic and find peer-reviewed\n            articles and books, as well as links to further resources.\n          </p>\n        </div>\n        <div>\n          <h2>Latest articles</h2>\n          <ul>\n            <li>tbd</li>\n          </ul>\n        </div>\n        <TagCloud />\n      </main>\n    </div>\n  );\n};\n\nexport default IndexPage\n"],"names":["Seo","title","description","image","article","titleTemplate","pathname","useLocation","useStaticQuery","query","site","siteMetadata","defaultTitle","defaultTitleTemplate","defaultDescription","siteUrl","defaultImage","twitterUsername","seo","url","Helmet","name","content","property","defaultProps","type","placeholder","componentStyles","padding","listStyles","marginBottom","paddingLeft","listItemStyles","listStyleType","backgroundColor","display","margin","borderRadius","linkStyle","textDecoration","color","group","allMarkdownRemark","style","map","tag","key","fieldValue","Link","to","kebabCase","totalCount","pageStyles","fontFamily","headingStyles","marginTop","maxWidth"],"sourceRoot":""}